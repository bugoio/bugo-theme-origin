.container {
  margin: 0 auto;
  width: 100%;
  // transition: max-width 0.125s;

  @each $key, $value in $breakpoints {
    @media (min-width: $value) {
      max-width: map-get($container-max-widths,$key);
    }
  }
}

body {
  display: grid;
  padding: 0;
  grid-template-columns: 1fr;
  grid-row-gap: 0;
  grid-template-areas: 
    "header"
    "wrap"
    "footer";
  @include ms-respond(grid-column-gap,4);
      
  @include respond-to('xxl') {
  }

  .wrap {
    display: grid;
    grid-area: wrap;
    grid-template-columns: repeat(1,1fr);
    grid-template-areas: "main";

    main {
      grid-area: main;
      padding: 0;
    }

    aside {
      display: none;
      grid-area: aside;
      padding: 0;
    }
  }

  @include respond-to('xxxl') {
    .wrap {
      max-width: 100vw;
      grid-template-columns: 1fr 1fr 1fr;
      grid-template-areas: ".... main main"; 
      grid-column-gap: 0;
    }
  }
}

body.sidebar {
  .wrap {
    grid-template-columns: repeat(1,1fr);
    @include ms-respond(grid-column-gap,4);
    grid-template-areas:
      "main" 
      "aside";

    @include respond-to('xxl') {
      grid-template-columns: repeat(3,1fr);
      grid-template-areas: 
        "main main aside";
    }
  }

  @include respond-to('xxxl') {
    .wrap {
      grid-template-columns: repeat(6,1fr);
      grid-template-areas: "..... ..... main main main sidebar"; 
      grid-column-gap: 0;
    }

  }
}

.site-footer {
  grid-area: footer;
}

main,
aside {
  padding: var(--global-padding) 0;
}



